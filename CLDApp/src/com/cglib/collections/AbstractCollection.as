///////////////////////////////////////////////////////////
//  AbstractCollection.as
//  Macromedia ActionScript Implementation of the Class AbstractCollection
//  Generated by Enterprise Architect
//  Created on:      12-����-2008 11:07:23
//  Original author: Administrator
///////////////////////////////////////////////////////////



package com.cglib.collections
{
	/**
	 * @author Administrator
	 * @version 1.0
	 * @created 12-����-2008 11:07:23
	 */	
	public class AbstractCollection implements ICollection
	{
	    protected var data:Array;
	    protected var _index:uint=0;
	    /**
	     * 
	     * @param element
	     */
	    public function AbstractCollection(){
	    	data=new Array();
	    }
	    public function addElement(element:Object): void
	    {
	    	data.push(element);
	    }		
		
		public function getNextElement():Object{
			_index++;
			
			if(_index>=data.length){
				_index--;
				return null;
			}
			return data[_index];
		}
		
		public function getPreElement():Object{
			if(_index==0)return null;			
			return data[--_index];
		}
		
		public function getFirstElement():Object{
			_index=0;
			return data[_index];
		}
		
		public function getElementByIndex(index:uint):Object{
			return data[index];
		}
		
		
		
	    public function get count(): uint
	    {
	    	return data.length;
	    }
	    
		public function get lastElement():Object{
			return data[data.length-1];
		}
	    /**
	     * 
	     * @param type
	     * @param index
	     */
	    public function iterator(type:String = ""): IIterator
	    {
	    	switch(type){
	    		case "asc":
	    			return new ArrayIterator(data);
	    		case "dsc":
	    			return new ArrayReverseIterator(data);
	    		default:
	    			return new ArrayIterator(data);
	    	}
	    }

	    public function rebuildArrays(): void
	    {
	    	_index=0;
	    }
	}//end AbstractCollection

}